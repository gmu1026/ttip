<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>EntityFramework.SqlServer</name>
  </assembly>
  <members>
    <member name="T:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy">
      <summary>SQL Azure의 일시적인 오류로 인해 발생한 예외를 throw하는 동작을 재시도하는 <see cref="T:System.Data.Entity.Infrastructure.IDbExecutionStrategy" />입니다.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy.#ctor">
      <summary>
        <see cref="T:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy" />의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy.#ctor(System.Int32,System.TimeSpan)">
      <summary>재시도 횟수의 지정된 제한과 재시도 간의 지연을 사용하여 <see cref="T:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy" />의 새 인스턴스를 만듭니다.</summary>
      <param name="maxRetryCount">최대 재시도 횟수입니다.</param>
      <param name="maxDelay">재시도 간의 최대 지연(밀리초)입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy.ShouldRetryOn(System.Exception)">
      <summary>지정된 예외가 다시 시도되어야 하는지 여부를 확인합니다.</summary>
      <returns>지정된 예외가 다시 시도되어야 하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="exception">다시 시도할 예외입니다.</param>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlFunctions">
      <summary>LINQ to Entities에서 SqlServer 메서드를 노출하는 함수 스텁을 포함합니다.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Acos(System.Nullable{System.Decimal})">
      <summary>지정된 숫자 값이 코사인과 일치하는 각도를 라디안으로 반환하는 수학 함수입니다.이 각도를 아크코사인이라고 합니다.</summary>
      <returns>라디안 단위의 각도입니다.</returns>
      <param name="arg1">각도의 코사인입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Acos(System.Nullable{System.Double})">
      <summary>지정된 숫자 값이 코사인과 일치하는 각도를 라디안으로 반환하는 수학 함수입니다.이 각도를 아크코사인이라고 합니다.</summary>
      <returns>입력 코사인 값으로 정의된 각도(라디안)입니다.</returns>
      <param name="arg1">각도의 코사인입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Ascii(System.String)">
      <summary>문자 식에서 가장 왼쪽 문자의 ASCII 코드 값을 반환합니다.</summary>
      <returns>입력 문자열에 있는 첫 번째 문자의 ASCII 코드입니다.</returns>
      <param name="arg">유효한 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Asin(System.Nullable{System.Decimal})">
      <summary>지정된 숫자 값이 사인과 일치하는 각도를 라디안으로 반환하는 수학 함수입니다.이 각도를 아크사인이라고 합니다.</summary>
      <returns>라디안 단위의 각도입니다.</returns>
      <param name="arg">각도의 사인입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Asin(System.Nullable{System.Double})">
      <summary>지정된 숫자 값이 사인과 일치하는 각도를 라디안으로 반환하는 수학 함수입니다.이 각도를 아크사인이라고 합니다.</summary>
      <returns>라디안 단위의 각도입니다.</returns>
      <param name="arg">각도의 사인입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan(System.Nullable{System.Decimal})">
      <summary>지정된 숫자 값이 탄젠트와 일치하는 각도를 라디안으로 반환하는 수학 함수입니다.이 각도를 아크탄젠트라고 합니다.</summary>
      <returns>라디안 단위의 각도입니다.</returns>
      <param name="arg">각도의 탄젠트입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan(System.Nullable{System.Double})">
      <summary>지정된 숫자 값이 탄젠트와 일치하는 각도를 라디안으로 반환하는 수학 함수입니다.이 각도를 아크탄젠트라고 합니다.</summary>
      <returns>라디안 단위의 각도입니다.</returns>
      <param name="arg">각도의 탄젠트입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan2(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>x축 양의 방향과 원점에서 시작하여 점 (x, y)를 지나가는 선 사이의 양의 각도를 라디안으로 반환합니다. 여기에서 x와 y는 지정된 두 숫자 값입니다.함수에 전달되는 첫 번째 매개 변수는 y 값이고 두 번째 매개 변수는 x 값입니다.</summary>
      <returns>라디안 단위의 각도입니다.</returns>
      <param name="arg1">점의 y 좌표입니다.</param>
      <param name="arg2">점의 x 좌표입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan2(System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>x축 양의 방향과 원점에서 시작하여 점 (x, y)를 지나가는 선 사이의 양의 각도를 라디안으로 반환합니다. 여기에서 x와 y는 지정된 두 숫자 값입니다.함수에 전달되는 첫 번째 매개 변수는 y 값이고 두 번째 매개 변수는 x 값입니다.</summary>
      <returns>라디안 단위의 각도입니다.</returns>
      <param name="arg1">점의 y 좌표입니다.</param>
      <param name="arg2">점의 x 좌표입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Char(System.Nullable{System.Int32})">
      <summary>지정된 정수 ASCII 값에 해당하는 문자를 반환합니다.</summary>
      <returns>지정된 ASCII 값에 해당하는 문자입니다.</returns>
      <param name="arg">ASCII 코드입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.Byte[],System.Byte[])">
      <summary>다른 식의 내부에 있는 하나의 식의 시작 위치를 반환합니다.</summary>
      <returns>toSearch에 있는 경우 이 대상의 시작 위치입니다.</returns>
      <param name="toSearch">검색할 문자열 식입니다.</param>
      <param name="target">찾을 문자열 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int32})">
      <summary>다른 식의 내부에 있는 하나의 식의 시작 위치를 반환합니다.</summary>
      <returns>toSearch에 있는 경우 이 대상의 시작 위치입니다.</returns>
      <param name="toSearch">검색할 문자열 식입니다.</param>
      <param name="target">찾을 문자열 식입니다.</param>
      <param name="startLocation">toSearch에서 검색이 시작되는 문자 위치입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int64})">
      <summary>다른 식의 내부에 있는 하나의 식의 시작 위치를 반환합니다.</summary>
      <returns>toSearch에 있는 경우 이 대상의 시작 위치입니다.</returns>
      <param name="toSearch">검색할 문자열 식입니다.</param>
      <param name="target">찾을 문자열 식입니다.</param>
      <param name="startLocation">toSearch에서 검색이 시작되는 문자 위치입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.String,System.String)">
      <summary>다른 식의 내부에 있는 하나의 식의 시작 위치를 반환합니다.</summary>
      <returns>toSearch에 있는 경우 이 대상의 시작 위치입니다.</returns>
      <param name="toSearch">검색할 문자열 식입니다.</param>
      <param name="target">찾을 문자열 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int32})">
      <summary>다른 식의 내부에 있는 하나의 식의 시작 위치를 반환합니다.</summary>
      <returns>toSearch에 있는 경우 이 대상의 시작 위치입니다.</returns>
      <param name="toSearch">검색할 문자열 식입니다.</param>
      <param name="target">찾을 문자열 식입니다.</param>
      <param name="startLocation">toSearch에서 검색이 시작되는 문자 위치입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int64})">
      <summary>다른 식의 내부에 있는 하나의 식의 시작 위치를 반환합니다.</summary>
      <returns>toSearch에 있는 경우 이 대상의 시작 위치인 <see cref="T:System.Int64" /> 값의 <see cref="T:System.Nullable`1" />입니다.</returns>
      <param name="toSearch">검색할 문자열 식입니다.</param>
      <param name="target">찾을 문자열 식입니다.</param>
      <param name="startLocation">toSearch에서 검색이 시작되는 문자 위치입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Byte[])">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬이 계산되는 문자 배열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Byte[],System.Byte[])">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬이 계산되는 문자 배열입니다.</param>
      <param name="arg2">체크섬이 계산되는 문자 배열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Byte[],System.Byte[],System.Byte[])">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬이 계산되는 문자 배열입니다.</param>
      <param name="arg2">체크섬이 계산되는 문자 배열입니다.</param>
      <param name="arg3">체크섬이 계산되는 문자 배열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Boolean})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
      <param name="arg3">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTime})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
      <param name="arg3">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
      <param name="arg3">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Decimal})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
      <param name="arg3">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Double})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
      <param name="arg3">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Guid})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
      <param name="arg3">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.TimeSpan})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
      <param name="arg3">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.String)">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.String,System.String)">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.String,System.String,System.String)">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
      <param name="arg3">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>컬렉션에 있는 값의 체크섬을 반환합니다.Null 값은 무시됩니다.</summary>
      <returns>입력 컬렉션에서 계산된 체크섬입니다.</returns>
      <param name="arg">체크섬이 계산되는 값의 컬렉션입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>컬렉션에 있는 값의 체크섬을 반환합니다.Null 값은 무시됩니다.</summary>
      <returns>입력 컬렉션에서 계산된 체크섬입니다.</returns>
      <param name="arg">체크섬이 계산되는 값의 컬렉션입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cos(System.Nullable{System.Decimal})">
      <summary>지정된 식에서 라디안으로 지정된 각도의 삼각 코사인을 반환합니다.</summary>
      <returns>지정된 각도의 삼각 코사인입니다.</returns>
      <param name="arg">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cos(System.Nullable{System.Double})">
      <summary>지정된 식에서 라디안으로 지정된 각도의 삼각 코사인을 반환합니다.</summary>
      <returns>지정된 각도의 삼각 코사인입니다.</returns>
      <param name="arg">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cot(System.Nullable{System.Decimal})">
      <summary>지정된 각도의 삼각 코탄젠트를 라디안으로 반환하는 수학 함수입니다.</summary>
      <returns>지정된 각도의 삼각 코탄젠트입니다.</returns>
      <param name="arg">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cot(System.Nullable{System.Double})">
      <summary>지정된 각도의 삼각 코탄젠트를 라디안으로 반환하는 수학 함수입니다.</summary>
      <returns>지정된 각도의 삼각 코탄젠트입니다.</returns>
      <param name="arg">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CurrentTimestamp">
      <summary>현재 날짜와 시간을 반환합니다.</summary>
      <returns>현재 날짜와 시간입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CurrentUser">
      <summary>현재 사용자의 이름을 반환합니다.</summary>
      <returns>현재 사용자의 이름입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Byte[])">
      <summary>식을 표시하는 데 사용되는 바이트 수를 반환합니다.</summary>
      <returns>입력 값의 바이트 수입니다.</returns>
      <param name="arg">길이를 검사할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Boolean})">
      <summary>식을 표시하는 데 사용되는 바이트 수를 반환합니다.</summary>
      <returns>입력 값의 바이트 수입니다.</returns>
      <param name="arg">데이터 길이를 검사할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.DateTime})">
      <summary>식을 표시하는 데 사용되는 바이트 수를 반환합니다.</summary>
      <returns>입력 값의 바이트 수입니다.</returns>
      <param name="arg">데이터 길이를 검사할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.DateTimeOffset})">
      <summary>식을 표시하는 데 사용되는 바이트 수를 반환합니다.</summary>
      <returns>입력 값의 바이트 수입니다.</returns>
      <param name="arg">데이터 길이를 검사할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Decimal})">
      <summary>식을 표시하는 데 사용되는 바이트 수를 반환합니다.</summary>
      <returns>입력 값의 바이트 수입니다.</returns>
      <param name="arg">데이터 길이를 검사할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Double})">
      <summary>식을 표시하는 데 사용되는 바이트 수를 반환합니다.</summary>
      <returns>입력 값의 바이트 수입니다.</returns>
      <param name="arg">데이터 길이를 검사할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Guid})">
      <summary>식을 표시하는 데 사용되는 바이트 수를 반환합니다.</summary>
      <returns>입력 값의 바이트 수입니다.</returns>
      <param name="arg">데이터 길이를 검사할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.TimeSpan})">
      <summary>식을 표시하는 데 사용되는 바이트 수를 반환합니다.</summary>
      <returns>입력 값의 바이트 수입니다.</returns>
      <param name="arg">데이터 길이를 검사할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.String)">
      <summary>식을 표시하는 데 사용되는 바이트 수를 반환합니다.</summary>
      <returns>입력 값의 바이트 수입니다.</returns>
      <param name="arg">데이터 길이를 검사할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTime})">
      <summary>지정된 날짜에 간격을 더하여 만든 새 datetime 값을 반환합니다.</summary>
      <returns>새 날짜입니다.</returns>
      <param name="datePartArg">증가시킬 날짜 부분입니다.</param>
      <param name="number">지정된 크기만큼 날짜를 증가시키는 데 사용되는 값입니다.</param>
      <param name="date">증가시킬 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTimeOffset})">
      <summary>지정된 날짜에 간격을 더하여 만든 새 날짜 값을 반환합니다.</summary>
      <returns>UTC(협정 세계시)를 기준으로 날짜와 시간으로 표현한 새 시각입니다.</returns>
      <param name="datePartArg">증가시킬 날짜 부분입니다.</param>
      <param name="number">지정된 크기만큼 날짜를 증가시키는 데 사용되는 값입니다.</param>
      <param name="dateTimeOffsetArg">증가시킬 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.TimeSpan})">
      <summary>지정된 시간 범위에 간격을 더하여 만든 새 시간 범위 값을 반환합니다.</summary>
      <returns>새 시간 범위입니다.</returns>
      <param name="datePartArg">증가시킬 날짜 부분입니다.</param>
      <param name="number">지정된 크기만큼 날짜를 증가시키는 데 사용되는 값입니다.</param>
      <param name="time">증가시킬 시간 범위입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.String)">
      <summary>지정된 날짜에 간격을 더하여 만든 새 datetime 값을 반환합니다.</summary>
      <returns>새 날짜인 <see cref="T:System.DateTime" /> 값의 <see cref="T:System.Nullable`1" />입니다.</returns>
      <param name="datePartArg">증가시킬 날짜 부분입니다.</param>
      <param name="number">지정된 크기만큼 날짜를 증가시키는 데 사용되는 값입니다.</param>
      <param name="date">증가시킬 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTimeOffset})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.String)">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTime})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.String)">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTime})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTimeOffset})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.String)">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTime})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTimeOffset})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.TimeSpan})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수를 지정하는 값입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.String)">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.Nullable{System.DateTime})">
      <summary>지정한 날짜의 지정된 datepart를 나타내는 문자열을 반환합니다.</summary>
      <returns>지정한 날짜의 지정된 부분입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="date">날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.Nullable{System.DateTimeOffset})">
      <summary>지정한 날짜의 지정된 datepart를 나타내는 문자열을 반환합니다.</summary>
      <returns>지정한 날짜의 지정된 부분입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="date">날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.Nullable{System.TimeSpan})">
      <summary>지정한 날짜의 지정된 datepart를 나타내는 문자열을 반환합니다.</summary>
      <returns>지정한 날짜의 지정된 부분입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="date">날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.String)">
      <summary>지정한 날짜의 지정된 datepart를 나타내는 문자열을 반환합니다.</summary>
      <returns>지정한 날짜의 지정된 부분입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="date">날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTime})">
      <summary>지정한 날짜의 지정한 부분을 나타내는 정수를 반환합니다.</summary>
      <returns>지정한 날짜의 지정된 datepart입니다.</returns>
      <param name="datePartArg">값을 반환할 날짜 부분입니다.</param>
      <param name="date">날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTimeOffset})">
      <summary>지정한 날짜의 지정한 부분을 나타내는 정수를 반환합니다.</summary>
      <returns>지정한 날짜의 지정된 datepart입니다.</returns>
      <param name="datePartArg">값을 반환할 날짜 부분입니다.</param>
      <param name="date">날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.Nullable{System.TimeSpan})">
      <summary>지정한 날짜의 지정한 부분을 나타내는 정수를 반환합니다.</summary>
      <returns>지정한 날짜의 지정된 datepart입니다.</returns>
      <param name="datePartArg">값을 반환할 날짜 부분입니다.</param>
      <param name="date">날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.String)">
      <summary>지정한 날짜의 지정한 부분을 나타내는 정수를 반환합니다.</summary>
      <returns>지정한 날짜의 지정된 datepart입니다.</returns>
      <param name="datePartArg">값을 반환할 날짜 부분입니다.</param>
      <param name="date">날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Decimal})">
      <summary>라디안으로 지정된 각도에 해당하는 각도(도)를 반환합니다.</summary>
      <returns>도로 변환된 지정된 각도입니다.</returns>
      <param name="arg1">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Double})">
      <summary>라디안으로 지정된 각도에 해당하는 각도(도)를 반환합니다.</summary>
      <returns>도로 변환된 지정된 각도입니다.</returns>
      <param name="arg1">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Int32})">
      <summary>라디안으로 지정된 각도에 해당하는 각도(도)를 반환합니다.</summary>
      <returns>도로 변환된 지정된 각도입니다.</returns>
      <param name="arg1">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Int64})">
      <summary>라디안으로 지정된 각도에 해당하는 각도(도)를 반환합니다.</summary>
      <returns>도로 변환된 지정된 각도입니다.</returns>
      <param name="arg1">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Difference(System.String,System.String)">
      <summary>두 문자 식의 SOUNDEX 값을 비교하여 차이를 나타내는 정수 값을 반환합니다.</summary>
      <returns>두 문자열의 SOUNDEX 차이입니다.</returns>
      <param name="string1">첫 번째 문자열입니다.</param>
      <param name="string2">두 번째 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Exp(System.Nullable{System.Decimal})">
      <summary>지정된 float 식의 지수 값을 반환합니다.</summary>
      <returns>입력 값만큼 거듭제곱된 상수 e입니다.</returns>
      <param name="arg">입력 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Exp(System.Nullable{System.Double})">
      <summary>지정된 float 식의 지수 값을 반환합니다.</summary>
      <returns>입력 값만큼 거듭제곱된 상수 e입니다.</returns>
      <param name="arg">입력 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.GetDate">
      <summary>데이터베이스 표준 시간대 오프셋 없이 datetime 값으로 현재 데이터베이스 시스템 타임스탬프를 반환합니다.이 값은 SQL Server 인스턴스가 실행되는 컴퓨터의 운영 체제에서 파생됩니다.</summary>
      <returns>현재 데이터베이스 타임스탬프입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.GetUtcDate">
      <summary>datetime 값으로 현재 데이터베이스 시스템 타임스탬프를 반환합니다.데이터베이스 표준 시간대 오프셋은 포함되지 않습니다.이 값은 현재 UTC 시간(협정 세계시)을 나타냅니다.이 값은 SQL Server 인스턴스가 실행되는 컴퓨터의 운영 체제에서 파생됩니다.</summary>
      <returns>현재 데이터베이스 UTC 타임스탬프입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.HostName">
      <summary>워크스테이션 이름을 반환합니다.</summary>
      <returns>워크스테이션의 이름입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.IsDate(System.String)">
      <summary>입력 값이 유효한 날짜 또는 시간인지 여부를 나타냅니다.</summary>
      <returns>입력 식이 datetime 또는 smalldatetime 데이터 형식의 유효한 날짜 또는 시간 값이면 1이고, 그렇지 않으면 0입니다.</returns>
      <param name="arg">테스트된 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.IsNumeric(System.String)">
      <summary>입력 값이 유효한 숫자 형식인지 여부를 나타냅니다.</summary>
      <returns>입력 식이 유효한 숫자 데이터 형식이면 1이고, 그렇지 않으면 0입니다.</returns>
      <param name="arg">문자열 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log(System.Nullable{System.Decimal})">
      <summary>지정된 입력 값의 자연 로그를 반환합니다.</summary>
      <returns>입력 값의 자연 로그입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log(System.Nullable{System.Double})">
      <summary>지정된 입력 값의 자연 로그를 반환합니다.</summary>
      <returns>입력 값의 자연 로그입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log10(System.Nullable{System.Decimal})">
      <summary>지정된 입력 값의 상용 로그를 반환합니다.</summary>
      <returns>입력 값의 상용 로그입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log10(System.Nullable{System.Double})">
      <summary>지정된 입력 값의 상용 로그를 반환합니다.</summary>
      <returns>입력 값의 상용 로그입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.NChar(System.Nullable{System.Int32})">
      <summary>유니코드 표준의 정의에 따라, 지정된 정수 코드에 해당하는 유니코드 문자를 반환합니다.</summary>
      <returns>입력 문자 코드에 해당하는 문자입니다.</returns>
      <param name="arg">문자 코드입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.PatIndex(System.String,System.String)">
      <summary>지정된 식에서 처음 발견된 패턴의 시작 위치를 반환하거나, 패턴이 없으면 모든 유효한 텍스트 및 문자 데이터 형식에 대해 0을 반환합니다.</summary>
      <returns>문자열 패턴을 찾은 시작 문자 위치입니다.</returns>
      <param name="stringPattern">검색할 문자열 패턴입니다.</param>
      <param name="target">검색할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Pi">
      <summary>파이의 상수 값을 반환합니다.</summary>
      <returns>파이의 숫자 값입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.QuoteName(System.String)">
      <summary>입력 문자열을 유효한 Microsoft SQL Server 구분 식별자로 만들기 위해 구분 기호가 추가된 유니코드 문자열을 반환합니다.</summary>
      <returns>대괄호가 추가된 원래 문자열입니다.</returns>
      <param name="stringArg">따옴표 문자를 추가할 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.QuoteName(System.String,System.String)">
      <summary>입력 문자열을 유효한 Microsoft SQL Server 구분 식별자로 만들기 위해 구분 기호가 추가된 유니코드 문자열을 반환합니다.</summary>
      <returns>지정된 따옴표 문자가 추가된 원래 문자열입니다.</returns>
      <param name="stringArg">따옴표 문자를 추가할 식입니다.</param>
      <param name="quoteCharacter">구분 기호로 사용할 단일 문자로 된 문자열입니다.작은따옴표( ' ), 왼쪽 또는 오른쪽 대괄호( [ ] ) 또는 큰따옴표( " )일 수 있습니다.따옴표 문자를 지정하지 않은 경우 대괄호가 사용됩니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Decimal})">
      <summary>지정된 각도(도)에 해당하는 라디안 값을 반환합니다.</summary>
      <returns>지정된 각도의 라디안 값입니다.</returns>
      <param name="arg">도 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Double})">
      <summary>지정된 각도(도)에 해당하는 라디안 값을 반환합니다.</summary>
      <returns>지정된 각도의 라디안 값입니다.</returns>
      <param name="arg">도 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Int32})">
      <summary>지정된 각도(도)에 해당하는 라디안 값을 반환합니다.</summary>
      <returns>지정된 각도의 라디안 값입니다.</returns>
      <param name="arg">도 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Int64})">
      <summary>지정된 각도(도)에 해당하는 라디안 값을 반환합니다.</summary>
      <returns>지정된 각도의 라디안 값입니다.</returns>
      <param name="arg">도 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Rand">
      <summary>0에서 1 사이의 의사 난수 float 값(0, 1은 제외)을 반환합니다.</summary>
      <returns>의사 난수 값입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Rand(System.Nullable{System.Int32})">
      <summary>0에서 1 사이의 의사 난수 float 값(0, 1은 제외)을 반환합니다.</summary>
      <returns>의사 난수 값입니다.</returns>
      <param name="seed">시드 값입니다.시드를 지정하지 않으면 SQL Server 데이터베이스 엔진에서 시드 값을 임의로 할당합니다.지정된 특정 시드 값에 대해 반환되는 결과는 항상 동일합니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Replicate(System.String,System.Nullable{System.Int32})">
      <summary>문자열 값을 지정한 횟수만큼 반복합니다.</summary>
      <returns>count로 지정된 횟수만큼 반복되는 대상 문자열입니다.</returns>
      <param name="target">유효한 문자열입니다.</param>
      <param name="count">대상을 반복할 횟수를 지정하는 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Decimal})">
      <summary>지정한 식의 양수(+1), 0 또는 음수(-1) 부호를 반환합니다.</summary>
      <returns>입력 식의 부호입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Double})">
      <summary>지정한 식의 양수(+1), 0 또는 음수(-1) 부호를 반환합니다.</summary>
      <returns>입력 식의 부호입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Int32})">
      <summary>지정한 식의 양수(+1), 0 또는 음수(-1) 부호를 반환합니다.</summary>
      <returns>입력 식의 부호입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Int64})">
      <summary>지정한 식의 양수(+1), 0 또는 음수(-1) 부호를 반환합니다.</summary>
      <returns>입력 식의 부호입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sin(System.Nullable{System.Decimal})">
      <summary>지정된 각도의 삼각 사인을 반환합니다.</summary>
      <returns>입력 식의 삼각 사인입니다.</returns>
      <param name="arg">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sin(System.Nullable{System.Double})">
      <summary>지정된 각도의 삼각 사인을 반환합니다.</summary>
      <returns>입력 식의 삼각 사인입니다.</returns>
      <param name="arg">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.SoundCode(System.String)">
      <summary>발음이 비슷한 단어나 이름을 찾기 위해 영숫자 문자열을 4자리(SOUNDEX) 코드로 변환합니다.</summary>
      <returns>입력 문자열의 SOUNDEX 코드입니다.</returns>
      <param name="arg">유효한 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Space(System.Nullable{System.Int32})">
      <summary>반복되는 공백으로 구성된 문자열을 반환합니다.</summary>
      <returns>지정한 수만큼의 공백으로 구성된 문자열입니다.</returns>
      <param name="arg1">공백 개수입니다.음수이면 Null 문자열이 반환됩니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Square(System.Nullable{System.Decimal})">
      <summary>지정된 숫자의 제곱을 반환합니다.</summary>
      <returns>입력 값의 제곱입니다.</returns>
      <param name="arg1">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Square(System.Nullable{System.Double})">
      <summary>지정된 숫자의 제곱을 반환합니다.</summary>
      <returns>입력 값의 제곱입니다.</returns>
      <param name="arg1">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.SquareRoot(System.Nullable{System.Decimal})">
      <summary>지정된 숫자의 제곱근을 반환합니다.</summary>
      <returns>입력 값의 제곱근입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.SquareRoot(System.Nullable{System.Double})">
      <summary>지정된 숫자의 제곱근을 반환합니다.</summary>
      <returns>입력 값의 제곱근입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Decimal})">
      <summary>숫자 데이터에서 변환된 문자 데이터를 반환합니다.</summary>
      <returns>문자열로 변환된 입력 식입니다.</returns>
      <param name="number">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32})">
      <summary>숫자 데이터에서 변환된 문자 데이터를 반환합니다.</summary>
      <returns>문자열로 변환된 입력 식입니다.</returns>
      <param name="number">숫자 식입니다.</param>
      <param name="length">문자열의 총 길이입니다.소수점, 부호, 숫자 및 공백을 포함한 길이입니다.기본값은 10입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <summary>숫자 데이터에서 변환된 문자 데이터를 반환합니다.</summary>
      <returns>문자열로 변환된 입력 식입니다.</returns>
      <param name="number">숫자 식입니다.</param>
      <param name="length">문자열의 총 길이입니다.소수점, 부호, 숫자 및 공백을 포함한 길이입니다.기본값은 10입니다.</param>
      <param name="decimalArg">소수점 오른쪽의 자릿수입니다.decimal은 16 이하여야 합니다.decimal이 16을 초과할 경우 결과가 소수점 이하 16자릿수에서 잘립니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Double})">
      <summary>숫자 데이터에서 변환된 문자 데이터를 반환합니다.</summary>
      <returns>문자열로 변환된 숫자 입력 식입니다.</returns>
      <param name="number">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>숫자 데이터에서 변환된 문자 데이터를 반환합니다.</summary>
      <returns>문자열로 변환된 숫자 입력 식입니다.</returns>
      <param name="number">숫자 식입니다.</param>
      <param name="length">문자열의 총 길이입니다.소수점, 부호, 숫자 및 공백을 포함한 길이입니다.기본값은 10입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <summary>숫자 데이터에서 변환된 문자 데이터를 반환합니다.</summary>
      <returns>문자열로 변환된 숫자 입력 식입니다.</returns>
      <param name="number">숫자 식입니다.</param>
      <param name="length">문자열의 총 길이입니다.소수점, 부호, 숫자 및 공백을 포함한 길이입니다.기본값은 10입니다.</param>
      <param name="decimalArg">소수점 오른쪽의 자릿수입니다.decimal은 16 이하여야 합니다.decimal이 16을 초과할 경우 결과가 소수점 이하 16자릿수에서 잘립니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Stuff(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
      <summary>문자열을 다른 문자열에 삽입합니다.대상 문자열의 시작 위치에서 지정된 길이의 문자를 삭제한 다음 두 번째 문자열을 대상 문자열의 시작 위치에 삽입합니다.</summary>
      <returns>두 문자열로 구성된 문자열입니다.</returns>
      <param name="stringInput">대상 문자열입니다.</param>
      <param name="start">대체 문자열이 삽입될 stringinput의 문자 위치입니다.</param>
      <param name="length">stringInput에서 삭제할 문자 수입니다.길이가 stringInput보다 길면 stringReplacement의 마지막 문자까지 삭제됩니다.</param>
      <param name="stringReplacement">stringInput에 삽입할 하위 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Tan(System.Nullable{System.Decimal})">
      <summary>입력 식의 삼각 탄젠트를 반환합니다.</summary>
      <returns>입력 각도의 탄젠트입니다.</returns>
      <param name="arg">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Tan(System.Nullable{System.Double})">
      <summary>입력 식의 삼각 탄젠트를 반환합니다.</summary>
      <returns>입력 각도의 탄젠트입니다.</returns>
      <param name="arg">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Unicode(System.String)">
      <summary>유니코드 표준의 정의에 따라 입력 식에 있는 첫 번째 문자의 정수 값을 반환합니다.</summary>
      <returns>입력 문자열에 있는 첫 번째 문자의 문자 코드입니다.</returns>
      <param name="arg">유효한 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.UserName">
      <summary>지정된 ID 번호에 해당하는 데이터베이스 사용자 이름을 반환합니다.</summary>
      <returns>사용자 이름입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.UserName(System.Nullable{System.Int32})">
      <summary>지정된 ID 번호에 해당하는 데이터베이스 사용자 이름을 반환합니다.</summary>
      <returns>사용자 이름입니다.</returns>
      <param name="arg">사용자 ID입니다.</param>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlProviderServices">
      <summary>SQL Server용 SqlClient 공급자에 대한 DbProviderServices 구현입니다.</summary>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlProviderServices.Instance">
      <summary>SqlProviderServices 형식의 Singleton 인스턴스입니다.</summary>
      <returns>
        <see cref="T:System.Data.Entity.SqlServer.SqlProviderServices" />.</returns>
    </member>
    <member name="F:System.Data.Entity.SqlServer.SqlProviderServices.ProviderInvariantName">
      <summary>구성 파일 및 코드 기반 구성에서 ADO.NET용 Microsoft SQL Server 및 Entity Framework 공급자 서비스를 지정하는 데 사용되는 "공급자 고정 이름"으로 사용하는 잘 알려진 문자열입니다.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlProviderServices.RegisterInfoMessageHandler(System.Data.Common.DbConnection,System.Action{System.String})">
      <summary>데이터베이스 공급자가 보내는 오류 없음 메시지를 처리할 처리기를 등록합니다.</summary>
      <param name="connection">정보를 받을 연결입니다.</param>
      <param name="handler">메시지를 처리할 처리기입니다.</param>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlProviderServices.SqlServerTypesAssemblyName">
      <summary>Microsoft.SqlServer.Types 어셈블리의 전체 이름으로 설정하여 기본 선택을 재정의합니다.</summary>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlProviderServices.TruncateDecimalsToScale">
      <summary>
        <see cref="T:System.Decimal" /> 값이 열에 대해 정의된 소수 자릿수로 잘리지 않도록 하려면 이 플래그를 false로 설정합니다.기본값은 true이며, 이는 이 동작에 따라 달라지는 기존 응용 프로그램이 중단되지 않도록 10진수 값이 잘림을 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Boolean" />를 반환합니다.</returns>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator">
      <summary>공급자를 알 수 없는 마이그레이션 작업을 Microsoft SQL Server 데이터베이스에 대해 실행할 수 있는 SQL 명령으로 변환하기 위한 공급자를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.#ctor">
      <summary>
        <see cref="T:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.BuildColumnType(System.Data.Entity.Migrations.Model.ColumnModel)">
      <summary>열의 데이터 형식을 지정하기 위한 SQL을 생성합니다.이 메서드는 열을 만들기 위한 SQL이 아니라 실제 형식만 생성합니다.</summary>
      <returns>데이터 형식을 나타내는 SQL입니다.</returns>
      <param name="columnModel">열의 정의입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.CreateConnection">
      <summary>현재 공급자에 대한 빈 연결을 만듭니다.파생된 공급자가 <see cref="T:System.Data.SqlClient.SqlConnection" /> 이외의 연결을 사용할 수 있도록 허용합니다.</summary>
      <returns>현재 공급자에 대한 빈 연결입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.DropDefaultConstraint(System.String,System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>열을 만들 때 만들어진 기본 제약 조건을 삭제하려고 시도할 SQL을 생성하려면 이 메서드를 호출합니다.일반적으로 이 메서드는 열의 생성 또는 변경을 재정의하는 코드에서 호출됩니다.</summary>
      <param name="table">제약 조건이 적용되는 테이블입니다.</param>
      <param name="column">제약 조건이 적용되는 열입니다.</param>
      <param name="writer">생성된 SQL이 기록되어야 하는 작성기입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Boolean)">
      <summary>열에 설정하려는 상수 bool 기본값을 지정하는 SQL을 생성합니다.이 메서드는 기본값을 설정하는 SQL이 아니라 실제 값만 생성합니다.</summary>
      <returns>기본값을 나타내는 SQL입니다.</returns>
      <param name="defaultValue">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Byte[])">
      <summary>열에 설정하려는 상수 byte[] 기본값을 지정하는 SQL을 생성합니다.이 메서드는 기본값을 설정하는 SQL이 아니라 실제 값만 생성합니다.</summary>
      <returns>기본값을 나타내는 SQL입니다.</returns>
      <param name="defaultValue">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String)">
      <summary>마이그레이션 작업 집합을 Microsoft SQL Server의 특정 SQL로 변환합니다.</summary>
      <returns>마이그레이션 작업을 수행하기 위해 실행할 SQL 문 목록입니다.</returns>
      <param name="migrationOperations">변환할 작업입니다.</param>
      <param name="providerManifestToken">대상으로 지정되는 SQL Server의 버전(예: "2005", "2008")을 나타내는2005", "2008").</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddColumnOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.AddColumnOperation" />에 대한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="addColumnOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddForeignKeyOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation" />에 대한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="addForeignKeyOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation" />에 대한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="addPrimaryKeyOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.AlterColumnOperation" />에 대한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="alterColumnOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterProcedureOperation)">
      <summary>지정된 프로시저 변경 작업을 생성합니다.</summary>
      <param name="alterProcedureOperation">프로시저 변경 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterTableOperation)">
      <summary>테이블 또는 테이블 특성의 정의가 변경될 때 SQL을 생성하려면 이 메서드를 재정의합니다.이 메서드의 기본 구현은 아무 작업도 수행하지 않습니다.</summary>
      <param name="alterTableOperation">테이블에 대한 변경을 설명하는 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.ColumnModel,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>지정된 열 모델에 대한 SQL을 생성합니다.이 메서드는 열을 처리하는 다른 메서드에서 호출되며 생성된 SQL을 변경하기 위해 재정의될 수 있습니다.</summary>
      <param name="column">SQL이 생성되는 열입니다.</param>
      <param name="writer">생성된 SQL이 기록되어야 하는 작성기입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateIndexOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.CreateIndexOperation" />에 대한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="createIndexOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateProcedureOperation)">
      <summary>지정된 프로시저 만들기 작업을 생성합니다.</summary>
      <param name="createProcedureOperation">프로시저 만들기 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateTableOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />에 대한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="createTableOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.DropColumnOperation" />에 대한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="dropColumnOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropForeignKeyOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.DropForeignKeyOperation" />에 대한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="dropForeignKeyOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.DropIndexOperation" />에 대한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="dropIndexOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation" />에 대한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="dropPrimaryKeyOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropProcedureOperation)">
      <summary>지정된 프로시저 삭제 작업을 생성합니다.</summary>
      <param name="dropProcedureOperation">프로시저 삭제 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropTableOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.DropTableOperation" />에 대한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="dropTableOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.HistoryOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.HistoryOperation" />에 대한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="historyOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MigrationOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.MigrationOperation" />에 대한 SQL을 생성합니다.파생된 공급자가 추가 작업 형식을 처리할 수 있도록 허용합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="migrationOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MoveProcedureOperation)">
      <summary>지정된 프로시저 이동 작업을 생성합니다.</summary>
      <param name="moveProcedureOperation">프로시저 이동 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.MoveTableOperation" />에 대한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="moveTableOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.RenameColumnOperation" />에 대한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="renameColumnOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameIndexOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.RenameIndexOperation" />에 대한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="renameIndexOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameProcedureOperation)">
      <summary>지정된 프로시저 이름 바꾸기 작업을 생성합니다.</summary>
      <param name="renameProcedureOperation">프로시저 이름 바꾸기 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.RenameTableOperation" />에 대한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="renameTableOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.SqlOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.SqlOperation" />에 대한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="sqlOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.UpdateDatabaseOperation)">
      <summary>일련의 마이그레이션 적용을 나타내는 지정된 데이터베이스 업데이트 작업을 생성합니다.생성된 스크립트는 idempotent입니다. 즉, 개별 마이그레이션이 이미 적용되었는지 여부를 확인하고 보류 중인 마이그레이션만 적용하는 조건부 논리가 스크립트에 포함되어 있습니다.</summary>
      <param name="updateDatabaseOperation">데이터베이스 업데이트 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Spatial.DbGeography)">
      <summary>열에 설정하려는 상수 geography 기본값을 지정하는 SQL을 생성합니다.이 메서드는 기본값을 설정하는 SQL이 아니라 실제 값만 생성합니다.</summary>
      <returns>기본값을 나타내는 SQL입니다.</returns>
      <param name="defaultValue">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Spatial.DbGeometry)">
      <summary>열에 설정하려는 상수 geometry 기본값을 지정하는 SQL을 생성합니다.이 메서드는 기본값을 설정하는 SQL이 아니라 실제 값만 생성합니다.</summary>
      <returns>기본값을 나타내는 SQL입니다.</returns>
      <param name="defaultValue">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.DateTime)">
      <summary>열에 설정하려는 상수 DateTime 기본값을 지정하는 SQL을 생성합니다.이 메서드는 기본값을 설정하는 SQL이 아니라 실제 값만 생성합니다.</summary>
      <returns>기본값을 나타내는 SQL입니다.</returns>
      <param name="defaultValue">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.DateTimeOffset)">
      <summary>열에 설정하려는 상수 DateTimeOffset 기본값을 지정하는 SQL을 생성합니다.이 메서드는 기본값을 설정하는 SQL이 아니라 실제 값만 생성합니다.</summary>
      <returns>기본값을 나타내는 SQL입니다.</returns>
      <param name="defaultValue">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Guid)">
      <summary>열에 설정하려는 상수 Guid 기본값을 지정하는 SQL을 생성합니다.이 메서드는 기본값을 설정하는 SQL이 아니라 실제 값만 생성합니다.</summary>
      <returns>기본값을 나타내는 SQL입니다.</returns>
      <param name="defaultValue">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Object)">
      <summary>열에 설정하려는 상수 기본값을 지정하는 SQL을 생성합니다.이 메서드는 기본값을 설정하는 SQL이 아니라 실제 값만 생성합니다.</summary>
      <returns>기본값을 나타내는 SQL입니다.</returns>
      <param name="defaultValue">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.String)">
      <summary>열에 설정하려는 상수 문자열 기본값을 지정하는 SQL을 생성합니다.이 메서드는 기본값을 설정하는 SQL이 아니라 실제 값만 생성합니다.</summary>
      <returns>기본값을 나타내는 SQL입니다.</returns>
      <param name="defaultValue">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.TimeSpan)">
      <summary>열에 설정하려는 상수 TimeSpan 기본값을 지정하는 SQL을 생성합니다.이 메서드는 기본값을 설정하는 SQL이 아니라 실제 값만 생성합니다.</summary>
      <returns>기본값을 나타내는 SQL입니다.</returns>
      <param name="defaultValue">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GenerateCreateSchema(System.String)">
      <summary>데이터베이스 스키마를 만들기 위한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="schema">만들 스키마의 이름입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GenerateMakeSystemTable(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>테이블을 시스템 테이블로 표시하기 위한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="createTableOperation">시스템 테이블로 표시하려는 테이블입니다.</param>
      <param name="writer">생성된 SQL을 기록할 <see cref="T:System.Data.Entity.Migrations.Utilities.IndentedTextWriter" />입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GenerateProcedureBody(System.Collections.Generic.ICollection{System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree},System.String,System.String)">
      <summary>저장 프로시저의 SQL 본문을 생성합니다.</summary>
      <returns>저장 프로시저의 SQL 본문입니다.</returns>
      <param name="commandTrees">삽입, 업데이트 또는 삭제 작업을 위한 명령을 나타내는 명령 트리입니다.</param>
      <param name="rowsAffectedParameter">행의 영향을 받는 매개 변수 이름입니다.</param>
      <param name="providerManifestToken">공급자 매니페스트 토큰입니다.</param>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GuidColumnDefault">
      <summary>기본값이 마이그레이션에서 명시적으로 지정되지 않은 경우 저장소 생성 GUID 열에 사용할 열 기본값을 반환합니다.온-프레미스 SQL Server 2005 이상의 경우 newsequentialid()를 반환하고,SQL Azure의 경우 newid()를 반환합니다.</summary>
      <returns>위에 설명된 대로 newsequentialid() 또는 newid()입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Name(System.String)">
      <summary>따옴표가 붙은 이름을 생성합니다.제공된 이름은 스키마를 포함하거나 포함하지 않을 수 있습니다.</summary>
      <returns>따옴표가 붙은 이름입니다.</returns>
      <param name="name">따옴표를 붙일 이름입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Quote(System.String)">
      <summary>SQL Server의 식별자에 따옴표를 붙입니다.</summary>
      <returns>따옴표를 붙인 식별자입니다.</returns>
      <param name="identifier">따옴표를 붙일 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Statement(System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.String)">
      <summary>데이터베이스에 대해 실행할 새 문을 추가합니다.</summary>
      <param name="writer">실행할 SQL이 포함된 작성기입니다.</param>
      <param name="batchTerminator">데이터베이스 공급자의 일괄 처리 종결자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Statement(System.String,System.Boolean,System.String)">
      <summary>데이터베이스에 대해 실행할 새 문을 추가합니다.</summary>
      <param name="sql">실행할 문입니다.</param>
      <param name="suppressTransaction">마이그레이션 프로세스를 트랜잭션 가능하도록 만들기 위해 사용되는 트랜잭션 범위 외부에서 이 문을 수행해야 하는지 여부를 나타냅니다.true로 설정된 경우 마이그레이션 프로세스가 실패해도 작업이 롤백되지 않습니다.</param>
      <param name="batchTerminator">데이터베이스 공급자의 일괄 처리 종결자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.StatementBatch(System.String,System.Boolean)">
      <summary>SQL 문자열을 하나 이상의 문으로 분할하여 필요에 따라 T-SQL 유틸리티 문을 처리합니다.</summary>
      <param name="sqlBatch">실행할 하나 이상의 문으로 분할할 SQL입니다.</param>
      <param name="suppressTransaction">마이그레이션 프로세스를 트랜잭션 가능하도록 만들기 위해 사용되는 트랜잭션 범위 외부에서 이 문을 수행해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.true로 설정된 경우 마이그레이션 프로세스가 실패해도 작업이 롤백되지 않습니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.WriteCreateTable(System.Data.Entity.Migrations.Model.CreateTableOperation)">
      <summary>
        <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />에 대한 SQL을 생성합니다.생성된 SQL은 Statement 메서드를 사용하여 추가해야 합니다.</summary>
      <param name="createTableOperation">SQL을 생성할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.WriteCreateTable(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>CREATE TABLE SQL을 대상 작성기에 씁니다.</summary>
      <param name="createTableOperation">SQL을 생성할 작업입니다.</param>
      <param name="writer">대상 작성기입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Writer">
      <summary>SQL을 생성하기 위해 사용할 수 있는 새 <see cref="T:System.Data.Entity.Migrations.Utilities.IndentedTextWriter" />를 가져옵니다.작성기를 만들기 위한 도우미 메서드일 뿐입니다.작성기에 써도 SQL이 실행되도록 등록되지 않습니다.Statement 메서드에 생성된 SQL을 전달해야 합니다.</summary>
      <returns>SQL 생성을 위해 사용할 빈 텍스트 작성기입니다.</returns>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlSpatialFunctions">
      <summary>LINQ to Entities에서 SqlServer 메서드를 노출하는 함수 스텁을 포함합니다.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.AsTextZM(System.Data.Entity.Spatial.DbGeography)">
      <summary>인스턴스에 의해 수행된 Z(상승) 및 M(측정) 값으로 확장된 지리 인스턴스의 OGC(Open Geospatial Consortium) WKT(Well-Known Text) 표현을 반환합니다.</summary>
      <returns>지리 인스턴스의 OGC(Open Geospatial Consortium) WKT(Well-Known Text) 표현입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.AsTextZM(System.Data.Entity.Spatial.DbGeometry)">
      <summary>인스턴스에 의해 수행된 Z(상승) 및 M(측정) 값으로 확장된 지리 인스턴스의 OGC(Open Geospatial Consortium) WKT(Well-Known Text) 표현을 반환합니다.</summary>
      <returns>기하학 인스턴스의 OGC(Open Geospatial Consortium) WKT(Well-Known Text) 표현입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.BufferWithTolerance(System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})">
      <summary>모든 점 값의 공통 부분을 나타내는 기하학적 개체를 반환합니다. 지리 인스턴스에서 이 점의 거리는 지정한 값보다 작거나 같아야 합니다.</summary>
      <returns>지리 인스턴스로부터의 거리가 지정된 값보다 작거나 같은 모든 점의 값을 결합한 것입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
      <param name="distance">거리입니다.</param>
      <param name="tolerance">지정된 허용치입니다.</param>
      <param name="relative">허용 오차 값이 상대적인지 절대적인지 지정합니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.BufferWithTolerance(System.Data.Entity.Spatial.DbGeometry,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})">
      <summary>모든 점 값의 공통 부분을 나타내는 기하학적 개체를 반환합니다. 기하 도형 인스턴스에서 이 점의 거리는 지정한 값보다 작거나 같아야 합니다.</summary>
      <returns>기하학 인스턴스로부터의 거리가 지정된 값보다 작거나 같은 모든 점의 값을 결합한 것입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
      <param name="distance">거리입니다.</param>
      <param name="tolerance">지정된 허용치입니다.</param>
      <param name="relative">허용 오차 값이 상대적인지 절대적인지 지정합니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.EnvelopeAngle(System.Data.Entity.Spatial.DbGeography)">
      <summary>EnvelopeCenter()에서 반환된 점과 지리 인스턴스의 점 사이의 최대 각도를 도 단위로 반환합니다.</summary>
      <returns>EnvelopeCenter()에서 반환된 점 사이의 최대 각도입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.EnvelopeCenter(System.Data.Entity.Spatial.DbGeography)">
      <summary>지리 인스턴스의 경계 원 중심으로 사용할 수 있는 점을 반환합니다.</summary>
      <returns>경계 원의 중심 위치를 지정하는 SqlGeography 값입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Filter(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>인덱스만 해당하는 신속한 교집합 메서드를 제공하여 인덱스가 사용 가능한 경우 지리 인스턴스가 다른 SqlGeography 인스턴스를 교차하는지 여부를 확인합니다.</summary>
      <returns>지리 인스턴스가 다른 SqlGeography 인스턴스와 교차할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
      <param name="geographyOther">필터가 호출되는 인스턴스와 비교할 다른 지리 인스턴스입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Filter(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>인덱스만 해당하는 신속한 교집합 메서드를 제공하여 인덱스가 사용 가능한 경우 지리 인스턴스가 다른 SqlGeometry 인스턴스를 교차하는지 여부를 확인합니다.</summary>
      <returns>지리 인스턴스가 다른 SqlGeography 인스턴스와 교차할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
      <param name="geometryOther">필터가 호출되는 인스턴스와 비교할 다른 지리 인스턴스입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.InstanceOf(System.Data.Entity.Spatial.DbGeography,System.String)">
      <summary>SqlGeography 인스턴스가 지정된 형식과 같은지 테스트합니다.</summary>
      <returns>지리 형식 계층에 노출된 12가지 형식 중 하나를 지정하는 문자열입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
      <param name="geometryTypeName">지리 형식 계층에 노출된 12가지 형식 중 하나를 지정하는 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.InstanceOf(System.Data.Entity.Spatial.DbGeometry,System.String)">
      <summary>SqlGeometry 인스턴스가 지정된 형식과 같은지 테스트합니다.</summary>
      <returns>지리 형식 계층에 노출된 12가지 형식 중 하나를 지정하는 문자열입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
      <param name="geometryTypeName">지리 형식 계층에 노출된 12가지 형식 중 하나를 지정하는 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.MakeValid(System.Data.Entity.Spatial.DbGeometry)">
      <summary>잘못된 기하 도형 인스턴스를 유효한 OGC(Open Geospatial Consortium) 형식의 기하 도형 인스턴스로 변환합니다.</summary>
      <returns>변환된 기하 도형 인스턴스입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.NumRings(System.Data.Entity.Spatial.DbGeography)">
      <summary>다각형 인스턴스의 전체 링 수를 반환합니다.</summary>
      <returns>전체 링 수입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.PointGeography(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>SRID(공간 참조 ID)와 x 및 y 값에서 Point 인스턴스를 나타내는 지리 인스턴스를 생성합니다.</summary>
      <returns>생성된 지리 인스턴스입니다.</returns>
      <param name="latitude">만드는 점의 X 좌표입니다.</param>
      <param name="longitude">만드는 점의 Y 좌표입니다.</param>
      <param name="spatialReferenceId">지리 인스턴스의 SRID입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.PointGeometry(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>SRID(공간 참조 ID)와 x 및 y 값에서 Point 인스턴스를 나타내는 기하 도형 인스턴스를 생성합니다.</summary>
      <returns>생성된 기하 도형 인스턴스입니다.</returns>
      <param name="xCoordinate">만드는 점의 X 좌표입니다.</param>
      <param name="yCoordinate">만드는 점의 Y 좌표입니다.</param>
      <param name="spatialReferenceId">지리 인스턴스의 SRID입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Reduce(System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Double})">
      <summary>허용 오차가 지정된 인스턴스에서 Douglas-Peucker 알고리즘을 실행하여 생성된 지리 인스턴스의 근사치를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Spatial.DbGeography" />를 반환합니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
      <param name="tolerance">Douglas Peucker 알고리즘에 입력할 허용 범위입니다.허용 범위는 양수여야 합니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Reduce(System.Data.Entity.Spatial.DbGeometry,System.Nullable{System.Double})">
      <summary>허용 오차가 지정된 인스턴스에서 Douglas-Peucker 알고리즘을 실행하여 생성된 지리 인스턴스의 근사치를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Spatial.DbGeometry" />를 반환합니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
      <param name="tolerance">Douglas Peucker 알고리즘에 입력할 허용 범위입니다.허용 범위는 양수여야 합니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.RingN(System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Int32})">
      <summary>SqlGeography 인스턴스의 지정된 링 반환: 1 ≤ n ≤ NumRings()</summary>
      <returns>n으로 지정된 링을 나타내는 SqlGeography 개체입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
      <param name="index">다각형 인스턴스에 있는 링 수와 1 사이의 정수 식입니다.</param>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlSpatialServices">
      <summary>Microsoft SQL Server와 함께 Entity Framework를 사용할 때 지리 공간적 형식을 지원하기 위한 <see cref="T:System.Data.Entity.Spatial.DbSpatialServices" />의 구현을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsBinary(System.Data.Entity.Spatial.DbGeography)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 잘 알려진 이진 표현을 가져옵니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 잘 알려진 이진 표현입니다.</returns>
      <param name="geographyValue">잘 알려진 이진 표현을 생성해야 하는 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsBinary(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 잘 알려진 이진 표현을 가져옵니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 잘 알려진 이진 표현입니다.</returns>
      <param name="geometryValue">잘 알려진 이진 표현을 생성해야 하는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsGml(System.Data.Entity.Spatial.DbGeography)">
      <summary>이 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 GML(Geography Markup Language) 표현을 생성합니다.</summary>
      <returns>이 DbGeography 값의 GML 표현을 포함하는 문자열입니다.</returns>
      <param name="geographyValue">GML을 생성해야 하는 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsGml(System.Data.Entity.Spatial.DbGeometry)">
      <summary>이 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 GML(Geography Markup Language) 표현을 생성합니다.</summary>
      <returns>이 DbGeometry 값의 GML 표현을 포함하는 문자열입니다.</returns>
      <param name="geometryValue">GML을 생성해야 하는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsText(System.Data.Entity.Spatial.DbGeography)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 잘 알려진 텍스트 표현을 가져옵니다.이 값에는 점의 경도와 위도만 포함되어야 합니다.</summary>
      <returns>
        <paramref name="geographyValue" />의 잘 알려진 텍스트 표현을 포함하는 문자열입니다.</returns>
      <param name="geographyValue">잘 알려진 텍스트를 생성해야 하는 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsText(System.Data.Entity.Spatial.DbGeometry)">
      <summary>점의 X 및 Y 좌표만 포함하여 주어진 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 잘 알려진 텍스트 표현을 가져옵니다.</summary>
      <returns>
        <paramref name="geometryValue" />의 잘 알려진 텍스트 표현을 포함하는 문자열입니다.</returns>
      <param name="geometryValue">잘 알려진 텍스트를 생성해야 하는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsTextIncludingElevationAndMeasure(System.Data.Entity.Spatial.DbGeography)">
      <summary>고도와 측정값이 있는 <see cref="T:System.Data.Entity.SqlServer.SqlSpatialServices" />의 텍스트 표현을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.Entity.SqlServer.SqlSpatialServices" />의 텍스트 표현입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsTextIncludingElevationAndMeasure(System.Data.Entity.Spatial.DbGeometry)">
      <summary>고도와 측정값이 있는 <see cref="T:System.Data.Entity.SqlServer.SqlSpatialServices" />의 텍스트 표현을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.Entity.SqlServer.SqlSpatialServices" />의 텍스트 표현입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Buffer(System.Data.Entity.Spatial.DbGeography,System.Double)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값에서 distance보다 작거나 같은 거리 안에 있는 모든 점을 나타내는 지리 값을 만듭니다.</summary>
      <returns>
        <paramref name="geographyValue" />에서 distance보다 작거나 같은 거리 안에 있는 모든 점을 나타내는 새 DbGeography 값입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
      <param name="distance">
        <paramref name="geographyValue" />에서 버퍼까지의 거리를 지정하는 double 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Buffer(System.Data.Entity.Spatial.DbGeometry,System.Double)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값에서 distance보다 작거나 같은 거리 안에 있는 모든 점을 나타내는 기하 도형 값을 만듭니다.</summary>
      <returns>
        <paramref name="geometryValue" />에서 distance보다 작거나 같은 거리 안에 있는 모든 점을 나타내는 새 DbGeometry 값입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
      <param name="distance">
        <paramref name="geometryValue" />에서 버퍼까지의 거리를 지정하는 double 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Contains(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>하나의 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 다른 값을 공간적으로 포함하는지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="geometryValue" />에 <paramref name="otherGeometry" />가 포함되어 있으면 true이고 그렇지 않으면 false입니다.</returns>
      <param name="geometryValue">첫 번째 기하 도형 값입니다.</param>
      <param name="otherGeometry">두 번째 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.CreateProviderValue(System.Data.Entity.Spatial.DbGeographyWellKnownValue)">
      <summary>지정된 잘 알려진 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 표현을 기반으로 이 공간 서비스 구현과 호환되는 공급자별 값을 만듭니다.</summary>
      <returns>이 공간 서비스 구현과 호환되는 방식으로 <paramref name="wellKnownValue" />에 포함된 정보를 인코딩하는 공급자별 값입니다.</returns>
      <param name="wellKnownValue">지리 값의 잘 알려진 표현을 포함하는 <see cref="T:System.Data.Entity.Spatial.DbGeographyWellKnownValue" />의 인스턴스입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.CreateProviderValue(System.Data.Entity.Spatial.DbGeometryWellKnownValue)">
      <summary>지정된 잘 알려진 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 표현을 기반으로 이 공간 서비스 구현과 호환되는 공급자별 값을 만듭니다.</summary>
      <returns>이 공간 서비스 구현과 호환되는 방식으로 <paramref name="wellKnownValue" />에 포함된 정보를 인코딩하는 공급자별 값입니다.</returns>
      <param name="wellKnownValue">기하 도형 값의 잘 알려진 표현을 포함하는 <see cref="T:System.Data.Entity.Spatial.DbGeometryWellKnownValue" />의 인스턴스입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.CreateWellKnownValue(System.Data.Entity.Spatial.DbGeography)">
      <summary>잘 알려진 표준 공간 형식 중 하나 또는 둘 다를 사용하여 지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값을 나타내는 <see cref="T:System.Data.Entity.Spatial.DbGeographyWellKnownValue" />의 인스턴스를 만듭니다.</summary>
      <returns>새 <paramref name="geographyValue" />로 나타낸 <see cref="T:System.Data.Entity.Spatial.DbGeographyWellKnownValue" />의 잘 알려진 표현입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.CreateWellKnownValue(System.Data.Entity.Spatial.DbGeometry)">
      <summary>잘 알려진 표준 공간 형식 중 하나 또는 둘 다를 사용하여 지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값을 나타내는 <see cref="T:System.Data.Entity.Spatial.DbGeometryWellKnownValue" />의 인스턴스를 만듭니다.</summary>
      <returns>새 <paramref name="geometryValue" />로 나타낸 <see cref="T:System.Data.Entity.Spatial.DbGeometryWellKnownValue" />의 잘 알려진 표현입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Crosses(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>주어진 두 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 공간적으로 가로지르는지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="geometryValue" />가 <paramref name="otherGeometry" />를 가로지르면 true이고 그렇지 않으면 false입니다.</returns>
      <param name="geometryValue">첫 번째 기하 도형 값입니다.</param>
      <param name="otherGeometry">두 번째 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Difference(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>두 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 차이를 계산합니다.</summary>
      <returns>
        <paramref name="geographyValue" />와 <paramref name="otherGeography" />의 차이를 나타내는 새 DbGeography 값입니다.</returns>
      <param name="geographyValue">첫 번째 지리 값입니다.</param>
      <param name="otherGeography">두 번째 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Difference(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>두 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 차이를 계산합니다.</summary>
      <returns>
        <paramref name="geometryValue" />와 <paramref name="otherGeometry" />의 차이를 나타내는 새 DbGeometry 값입니다.</returns>
      <param name="geometryValue">첫 번째 기하 도형 값입니다.</param>
      <param name="otherGeometry">두 번째 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Disjoint(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>주어진 두 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 공간적으로 분리되어 있는지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="geographyValue" />가 <paramref name="otherGeography" />와 분리되어 있으면 true이고 그렇지 않으면 false입니다.</returns>
      <param name="geographyValue">분리되어 있는지 비교할 첫 번째 지리 값입니다.</param>
      <param name="otherGeography">분리되어 있는지 비교할 두 번째 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Disjoint(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>주어진 두 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 공간적으로 분리되어 있는지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="geometryValue" />가 <paramref name="otherGeometry" />와 분리되어 있으면 true이고 그렇지 않으면 false입니다.</returns>
      <param name="geometryValue">분리되어 있는지 비교할 첫 번째 기하 도형 값입니다.</param>
      <param name="otherGeometry">분리되어 있는지 비교할 두 번째 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Distance(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>두 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값에서 가장 가까운 점 사이의 거리를 계산합니다.</summary>
      <returns>
        <paramref name="geographyValue" /> 및 <paramref name="otherGeography" />에서 가장 가까운 두 점 사이의 거리를 지정하는 double 값입니다.</returns>
      <param name="geographyValue">첫 번째 지리 값입니다.</param>
      <param name="otherGeography">두 번째 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Distance(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>두 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값에서 가장 가까운 점 사이의 거리를 계산합니다.</summary>
      <returns>
        <paramref name="geographyValue" /> 및 <paramref name="otherGeography" />에서 가장 가까운 두 점 사이의 거리를 지정하는 double 값입니다.</returns>
      <param name="geometryValue">첫 번째 지리 값입니다.</param>
      <param name="otherGeometry">두 번째 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.ElementAt(System.Data.Entity.Spatial.DbGeography,System.Int32)">
      <summary>지리 컬렉션을 나타내는 경우 지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 요소를 반환합니다.</summary>
      <returns>
        <paramref name="geographyValue" />가 다른 지리 값의 컬렉션을 나타내면 <paramref name="index" /> 위치에 있는 geographyValue의 요소이고, 그렇지 않으면 null입니다.</returns>
      <param name="geographyValue">지리 컬렉션을 나타낼 필요가 없는 지리 값입니다.</param>
      <param name="index">요소를 가져와야 하는 지리 값 내의 위치입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.ElementAt(System.Data.Entity.Spatial.DbGeometry,System.Int32)">
      <summary>기하 도형 컬렉션을 나타내는 경우 지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 요소를 반환합니다.</summary>
      <returns>
        <paramref name="geographyValue" />가 다른 지리 값의 컬렉션을 나타내면 <paramref name="index" /> 위치에 있는 geographyValue의 요소이고, 그렇지 않으면 null입니다.</returns>
      <param name="geometryValue">기하 도형 컬렉션을 나타낼 필요가 없는 기하 도형 값입니다.</param>
      <param name="index">요소를 가져와야 하는 기하 도형 값 내의 위치입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyCollectionFromBinary(System.Byte[],System.Int32)">
      <summary>지정된 잘 알려진 이진 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 컬렉션 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 이진 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값입니다.</returns>
      <param name="geographyCollectionWellKnownBinary">지리 값의 잘 알려진 이진 표현을 포함하는 바이트 배열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyCollectionFromText(System.String,System.Int32)">
      <summary>지정된 잘 알려진 텍스트 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 컬렉션 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 텍스트 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값입니다.</returns>
      <param name="geographyCollectionWellKnownText">지리 값의 잘 알려진 텍스트 표현을 포함하는 문자열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromBinary(System.Byte[])">
      <summary>지정된 잘 알려진 이진 값을 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값을 만듭니다.</summary>
      <returns>기본 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 이진 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값입니다.</returns>
      <param name="wellKnownBinary">지리 값의 잘 알려진 이진 표현을 포함하는 바이트 배열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromBinary(System.Byte[],System.Int32)">
      <summary>지정된 잘 알려진 이진 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 이진 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값입니다.</returns>
      <param name="wellKnownBinary">지리 값의 잘 알려진 이진 표현을 포함하는 바이트 배열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromGml(System.String)">
      <summary>지정된 GML(Geography Markup Language) 값을 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값을 만듭니다.</summary>
      <returns>기본 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />)를 사용하여 GML 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값입니다.</returns>
      <param name="geographyMarkup">지리 값의 GML(Geometry Markup Language) 표현을 포함하는 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromGml(System.String,System.Int32)">
      <summary>지정된 GML(Geography Markup Language) 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)를 사용하여 GML 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값입니다.</returns>
      <param name="geographyMarkup">지리 값의 GML(Geometry Markup Language) 표현을 포함하는 문자열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromProviderValue(System.Object)">
      <summary>이 공간 서비스 구현과 호환되는 공급자별 값을 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값을 만듭니다.</summary>
      <returns>이 공간 서비스 구현과 지정된 공급자 값이 지원하는 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값입니다.</returns>
      <param name="providerValue">이 공간 서비스 구현이 지리 값으로 해석할 수 있는 공급자별 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromText(System.String)">
      <summary>지정된 잘 알려진 텍스트 값을 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값을 만듭니다.</summary>
      <returns>기본 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 텍스트 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값입니다.</returns>
      <param name="wellKnownText">지리 값의 잘 알려진 텍스트 표현을 포함하는 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromText(System.String,System.Int32)">
      <summary>지정된 잘 알려진 텍스트 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 텍스트 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값입니다.</returns>
      <param name="wellKnownText">지리 값의 잘 알려진 텍스트 표현을 포함하는 문자열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyLineFromBinary(System.Byte[],System.Int32)">
      <summary>지정된 잘 알려진 이진 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 선 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 이진 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값입니다.</returns>
      <param name="lineWellKnownBinary">지리 값의 잘 알려진 이진 표현을 포함하는 바이트 배열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyLineFromText(System.String,System.Int32)">
      <summary>지정된 잘 알려진 텍스트 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 선 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 텍스트 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값입니다.</returns>
      <param name="lineWellKnownText">지리 값의 잘 알려진 텍스트 표현을 포함하는 문자열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyMultiLineFromBinary(System.Byte[],System.Int32)">
      <summary>지정된 잘 알려진 이진 값과 좌표계 식별자를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 다중 선 값을 만듭니다.</summary>
      <returns>새로운 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 다중 선 값입니다.</returns>
      <param name="multiLineWellKnownBinary">잘 알려진 이진 값입니다.</param>
      <param name="coordinateSystemId">좌표계 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyMultiLineFromText(System.String,System.Int32)">
      <summary>지정된 잘 알려진 텍스트 값과 좌표계 식별자를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 다중 선 값을 만듭니다.</summary>
      <returns>새로운 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 다중 선 값입니다.</returns>
      <param name="multiLineWellKnownText">잘 알려진 텍스트 값입니다.</param>
      <param name="coordinateSystemId">좌표계 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyMultiPointFromBinary(System.Byte[],System.Int32)">
      <summary>지정된 잘 알려진 이진 값과 좌표계 식별자를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 다중 점 값을 만듭니다.</summary>
      <returns>새로운 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 다중 점 값입니다.</returns>
      <param name="multiPointWellKnownBinary">잘 알려진 이진 값입니다.</param>
      <param name="coordinateSystemId">좌표계 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyMultiPointFromText(System.String,System.Int32)">
      <summary>지정된 잘 알려진 텍스트 값과 좌표계 식별자를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 다중 점 값을 만듭니다.</summary>
      <returns>새로운 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 다중 점 값입니다.</returns>
      <param name="multiPointWellKnownText">잘 알려진 텍스트 값입니다.</param>
      <param name="coordinateSystemId">좌표계 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyMultiPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>지정된 잘 알려진 이진 값과 좌표계 식별자를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 다중 다각형 값을 만듭니다.</summary>
      <returns>새로운 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 다중 다각형 값입니다.</returns>
      <param name="multiPolygonWellKnownBinary">잘 알려진 이진 값입니다.</param>
      <param name="coordinateSystemId">좌표계 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyMultiPolygonFromText(System.String,System.Int32)">
      <summary>지정된 잘 알려진 텍스트 값과 좌표계 식별자를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 다중 다각형 값을 만듭니다.</summary>
      <returns>새로운 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 다중 다각형 값입니다.</returns>
      <param name="multiPolygonKnownText">잘 알려진 텍스트 값입니다.</param>
      <param name="coordinateSystemId">좌표계 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyPointFromBinary(System.Byte[],System.Int32)">
      <summary>지정된 잘 알려진 이진 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 점 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 이진 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값입니다.</returns>
      <param name="pointWellKnownBinary">지리 값의 잘 알려진 이진 표현을 포함하는 바이트 배열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyPointFromText(System.String,System.Int32)">
      <summary>지정된 잘 알려진 텍스트 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 점 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 텍스트 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값입니다.</returns>
      <param name="pointWellKnownText">지리 값의 잘 알려진 텍스트 표현을 포함하는 문자열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>지정된 잘 알려진 이진 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 다각형 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 이진 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값입니다.</returns>
      <param name="polygonWellKnownBinary">지리 값의 잘 알려진 이진 표현을 포함하는 바이트 배열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyPolygonFromText(System.String,System.Int32)">
      <summary>지정된 잘 알려진 텍스트 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 다각형 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 텍스트 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값입니다.</returns>
      <param name="polygonWellKnownText">지리 값의 잘 알려진 텍스트 표현을 포함하는 문자열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryCollectionFromBinary(System.Byte[],System.Int32)">
      <summary>지정된 잘 알려진 이진 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 컬렉션 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 이진 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값입니다.</returns>
      <param name="geometryCollectionWellKnownBinary">기하 도형 값의 잘 알려진 이진 표현을 포함하는 바이트 배열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryCollectionFromText(System.String,System.Int32)">
      <summary>지정된 잘 알려진 텍스트 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 컬렉션 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 텍스트 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값입니다.</returns>
      <param name="geometryCollectionWellKnownText">기하 도형 값의 잘 알려진 텍스트 표현을 포함하는 문자열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromBinary(System.Byte[])">
      <summary>지정된 잘 알려진 이진 값을 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값을 만듭니다.</summary>
      <returns>기본 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 이진 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값입니다.</returns>
      <param name="wellKnownBinary">기하 도형 값의 잘 알려진 이진 표현을 포함하는 바이트 배열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromBinary(System.Byte[],System.Int32)">
      <summary>지정된 잘 알려진 이진 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 이진 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값입니다.</returns>
      <param name="wellKnownBinary">기하 도형 값의 잘 알려진 이진 표현을 포함하는 바이트 배열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromGml(System.String)">
      <summary>지정된 GML(Geography Markup Language) 값을 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값을 만듭니다.</summary>
      <returns>기본 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />)를 사용하여 GML 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값입니다.</returns>
      <param name="geometryMarkup">기하 도형 값의 GML(Geography Markup Language) 표현을 포함하는 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromGml(System.String,System.Int32)">
      <summary>지정된 GML(Geography Markup Language) 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)를 사용하여 GML 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값입니다.</returns>
      <param name="geometryMarkup">기하 도형 값의 GML(Geography Markup Language) 표현을 포함하는 문자열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromProviderValue(System.Object)">
      <summary>이 공간 서비스 구현과 호환되는 공급자별 값을 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값을 만듭니다.</summary>
      <returns>이 공간 서비스 구현과 지정된 공급자 값이 지원하는 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값입니다.</returns>
      <param name="providerValue">이 공간 서비스 구현이 기하 도형 값으로 해석할 수 있는 공급자별 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromText(System.String)">
      <summary>지정된 잘 알려진 텍스트 값을 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값을 만듭니다.</summary>
      <returns>기본 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 텍스트 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값입니다.</returns>
      <param name="wellKnownText">기하 도형 값의 잘 알려진 텍스트 표현을 포함하는 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromText(System.String,System.Int32)">
      <summary>지정된 잘 알려진 텍스트 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 텍스트 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값입니다.</returns>
      <param name="wellKnownText">기하 도형 값의 잘 알려진 텍스트 표현을 포함하는 문자열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryLineFromBinary(System.Byte[],System.Int32)">
      <summary>지정된 잘 알려진 이진 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 선 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 이진 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값입니다.</returns>
      <param name="lineWellKnownBinary">기하 도형 값의 잘 알려진 이진 표현을 포함하는 바이트 배열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryLineFromText(System.String,System.Int32)">
      <summary>지정된 잘 알려진 텍스트 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 선 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 텍스트 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값입니다.</returns>
      <param name="lineWellKnownText">기하 도형 값의 잘 알려진 텍스트 표현을 포함하는 문자열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryMultiLineFromBinary(System.Byte[],System.Int32)">
      <summary>지정된 잘 알려진 이진 값과 좌표계 식별자를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 다중 선 값을 만듭니다.</summary>
      <returns>새로운 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 다중 선 값입니다.</returns>
      <param name="multiLineWellKnownBinary">잘 알려진 이진 값입니다.</param>
      <param name="coordinateSystemId">좌표계 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryMultiLineFromText(System.String,System.Int32)">
      <summary>지정된 잘 알려진 텍스트 값과 좌표계 식별자를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 다중 선 값을 만듭니다.</summary>
      <returns>새로운 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 다중 선 값입니다.</returns>
      <param name="multiLineWellKnownText">잘 알려진 텍스트 값입니다.</param>
      <param name="coordinateSystemId">좌표계 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryMultiPointFromBinary(System.Byte[],System.Int32)">
      <summary>지정된 잘 알려진 이진 값과 좌표계 식별자를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 다중 점 값을 만듭니다.</summary>
      <returns>새로운 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 다중 점 값입니다.</returns>
      <param name="multiPointWellKnownBinary">잘 알려진 이진 값입니다.</param>
      <param name="coordinateSystemId">좌표계 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryMultiPointFromText(System.String,System.Int32)">
      <summary>지정된 잘 알려진 텍스트 값과 좌표계 식별자를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 다중 점 값을 만듭니다.</summary>
      <returns>새로운 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 다중 점 값입니다.</returns>
      <param name="multiPointWellKnownText">잘 알려진 텍스트 값입니다.</param>
      <param name="coordinateSystemId">좌표계 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryMultiPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>지정된 잘 알려진 이진 값과 좌표계 식별자를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 다중 다각형 값을 만듭니다.</summary>
      <returns>새로운 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 다중 다각형 값입니다.</returns>
      <param name="multiPolygonWellKnownBinary">잘 알려진 이진 값입니다.</param>
      <param name="coordinateSystemId">좌표계 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryMultiPolygonFromText(System.String,System.Int32)">
      <summary>지정된 잘 알려진 텍스트 값과 좌표계 식별자를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 다중 다각형 값을 만듭니다.</summary>
      <returns>새로운 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 다중 다각형 값입니다.</returns>
      <param name="multiPolygonKnownText">잘 알려진 텍스트 값입니다.</param>
      <param name="coordinateSystemId">좌표계 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryPointFromBinary(System.Byte[],System.Int32)">
      <summary>지정된 잘 알려진 이진 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 점 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 이진 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값입니다.</returns>
      <param name="pointWellKnownBinary">기하 도형 값의 잘 알려진 이진 표현을 포함하는 바이트 배열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryPointFromText(System.String,System.Int32)">
      <summary>지정된 잘 알려진 텍스트 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 점 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 텍스트 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값입니다.</returns>
      <param name="pointWellKnownText">기하 도형 값의 잘 알려진 텍스트 표현을 포함하는 문자열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>지정된 잘 알려진 이진 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 다각형 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 이진 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값입니다.</returns>
      <param name="polygonWellKnownBinary">기하 도형 값의 잘 알려진 이진 표현을 포함하는 바이트 배열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryPolygonFromText(System.String,System.Int32)">
      <summary>지정된 잘 알려진 텍스트 값과 SRID(좌표계 식별자)를 기반으로 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 다각형 값을 만듭니다.</summary>
      <returns>지정된 SRID(좌표계 식별자)(<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />)를 사용하여 잘 알려진 텍스트 값으로 정의된 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값입니다.</returns>
      <param name="polygonWellKnownText">기하 도형 값의 잘 알려진 텍스트 표현을 포함하는 문자열입니다.</param>
      <param name="coordinateSystemId">새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 사용해야 하는 좌표계의 식별자입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetArea(System.Data.Entity.Spatial.DbGeography)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 영역을 나타내는 null 허용 부울 값을 반환합니다. 이 값이 표면을 나타내지 않는 경우 null일 수 있습니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 영역을 나타내는 null 허용 double 값입니다.</returns>
      <param name="geographyValue">표면을 나타낼 필요가 없는 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetArea(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 영역을 나타내는 null 허용 부울 값을 반환합니다. 이 값이 표면을 나타내지 않는 경우 null일 수 있습니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 영역을 나타내는 null 허용 double 값입니다.</returns>
      <param name="geometryValue">표면을 나타낼 필요가 없는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetBoundary(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 경계를 나타내는 null 허용 double 값을 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 경계입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetCentroid(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 DbGeography 값의 중심을 나타내는 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값을 반환합니다. 이 값이 표면을 나타내지 않는 경우 null일 수 있습니다.</summary>
      <returns>geometryValue가 표면을 나타내면 <paramref name="geometryValue" />의 중앙이고, 그렇지 않으면 null입니다.</returns>
      <param name="geometryValue">표면을 나타낼 필요가 없는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetConvexHull(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 볼록 다각형을 나타내는 null 허용 double 값을 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 볼록 다각형입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetCoordinateSystemId(System.Data.Entity.Spatial.DbGeography)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 좌표계 식별자를 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 좌표계 식별자입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetCoordinateSystemId(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 좌표계 식별자를 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 좌표계 식별자입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetDimension(System.Data.Entity.Spatial.DbGeography)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 크기를 가져오거나, 값이 컬렉션인 경우에는 가장 큰 요소 크기를 가져옵니다.</summary>
      <returns>
        <paramref name="geographyValue" />의 차원이거나, <see cref="T:System.Data.Entity.Spatial.DbGeography" />가 컬렉션일 경우 가장 큰 요소 차원입니다.</returns>
      <param name="geographyValue">크기 값을 검색해야 하는 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetDimension(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 크기를 가져오거나, 값이 컬렉션인 경우에는 가장 큰 요소 크기를 가져옵니다.</summary>
      <returns>
        <paramref name="geometryValue" />의 차원이거나, <see cref="T:System.Data.Entity.Spatial.DbGeometry" />가 컬렉션일 경우 가장 큰 요소 차원입니다.</returns>
      <param name="geometryValue">크기 값을 검색해야 하는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetElementCount(System.Data.Entity.Spatial.DbGeography)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 지리 컬렉션을 나타내는 경우 해당 값의 요소 수를 반환합니다.</summary>
      <returns>geographyValue가 다른 지리 값의 컬렉션을 나타내면 <paramref name="geographyValue" />의 요소 수이고, 그렇지 않으면 null입니다.</returns>
      <param name="geographyValue">지리 컬렉션을 나타낼 필요가 없는 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetElementCount(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 기하 도형 컬렉션을 나타내는 경우 해당 값의 요소 수를 반환합니다.</summary>
      <returns>geometryValue가 다른 기하 도형 값의 컬렉션을 나타내면 <paramref name="geometryValue" />의 요소 수이고, 그렇지 않으면 null입니다.</returns>
      <param name="geometryValue">기하 도형 컬렉션을 나타낼 필요가 없는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetElevation(System.Data.Entity.Spatial.DbGeography)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 점을 나타내는 경우 해당 값의 고도(Z 좌표)를 반환합니다.</summary>
      <returns>점을 나타낼 경우 <paramref name="geographyValue" />의 고도(Z 좌표)이고, 그렇지 않으면 null입니다.</returns>
      <param name="geographyValue">점을 나타낼 필요가 없는 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetElevation(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 점을 나타내는 경우 해당 값의 고도(Z)를 반환합니다.</summary>
      <returns>geometryValue가 점을 나타내는 경우 <paramref name="geometryValue" />의 고도(Z)이고, 그렇지 않으면 null입니다.</returns>
      <param name="geometryValue">점을 나타낼 필요가 없는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetEndPoint(System.Data.Entity.Spatial.DbGeography)">
      <summary>지정된 DbGeography 값의 끝점을 나타내는 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값을 반환합니다. 이 값이 곡선을 나타내지 않는 경우 null일 수 있습니다.</summary>
      <returns>geographyValue가 곡선을 나타내면 <paramref name="geographyValue" />의 끝점이고, 그렇지 않으면 null입니다.</returns>
      <param name="geographyValue">곡선을 나타낼 필요가 없는 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetEndPoint(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 DbGeometry 값의 끝점을 나타내는 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값을 반환합니다. 이 값이 곡선을 나타내지 않는 경우 null일 수 있습니다.</summary>
      <returns>geometryValue가 곡선을 나타내면 <paramref name="geometryValue" />의 끝점이고, 그렇지 않으면 null입니다.</returns>
      <param name="geometryValue">곡선을 나타낼 필요가 없는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetEnvelope(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 포락선(최소 경계 상자)을 기하 도형 값으로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값으로 나타낸 <paramref name="geometryValue" />의 포락선입니다.</returns>
      <param name="geometryValue">포락선 값을 검색해야 하는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetExteriorRing(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 DbGeometry 값의 외부 링을 나타내는 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값을 반환합니다. 이 값이 다각형을 나타내지 않는 경우 null일 수 있습니다.</summary>
      <returns>geometryValue가 다각형을 나타내면 <paramref name="geometryValue" />에서 바깥쪽 링을 나타내는 DbGeometry 값이고, 그렇지 않으면 null입니다.</returns>
      <param name="geometryValue">다각형을 나타낼 필요가 없는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetInteriorRingCount(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 다각형을 나타내는 경우 해당 값의 내부 링 수를 반환합니다.</summary>
      <returns>geometryValue가 다각형을 나타내면 <paramref name="geometryValue" />의 요소 수이고, 그렇지 않으면 null입니다.</returns>
      <param name="geometryValue">다각형을 나타낼 필요가 없는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsClosed(System.Data.Entity.Spatial.DbGeography)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 닫혀 있는지 여부를 나타내는 null 허용 부울 값을 반환합니다. 이 값이 곡선을 나타내지 않는 경우 null일 수 있습니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 닫혀 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="geographyValue">곡선을 나타낼 필요가 없는 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsClosed(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 닫혀 있는지 여부를 나타내는 null 허용 부울 값을 반환합니다. 이 값이 곡선을 나타내지 않는 경우 null일 수 있습니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 닫혀 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="geometryValue">곡선을 나타낼 필요가 없는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsEmpty(System.Data.Entity.Spatial.DbGeography)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 비어 있는지 여부를 나타내는 null 허용 부울 값을 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 비어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsEmpty(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 비어 있는지 여부를 나타내는 null 허용 부울 값을 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 비어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsRing(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 링인지 여부를 나타내는 null 허용 부울 값을 반환합니다. 이 값이 곡선을 나타내지 않는 경우 null일 수 있습니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 링이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="geometryValue">곡선을 나타낼 필요가 없는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsSimple(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 단순한지 여부를 나타내는 null 허용 부울 값을 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 단순하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsValid(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 올바른지 여부를 나타내는 null 허용 부울 값을 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 올바르면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetLatitude(System.Data.Entity.Spatial.DbGeography)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 점을 나타내는 경우 해당 값의 위도 좌표를 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 위도 좌표입니다.</returns>
      <param name="geographyValue">점을 나타낼 필요가 없는 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetLength(System.Data.Entity.Spatial.DbGeography)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 길이를 나타내는 null 허용 double 값을 반환합니다. 이 값이 곡선을 나타내지 않는 경우 null일 수 있습니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 길이입니다.</returns>
      <param name="geographyValue">곡선을 나타낼 필요가 없는 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetLength(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 길이를 나타내는 null 허용 double 값을 반환합니다. 이 값이 곡선을 나타내지 않는 경우 null일 수 있습니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 길이입니다.</returns>
      <param name="geometryValue">곡선을 나타낼 필요가 없는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetLongitude(System.Data.Entity.Spatial.DbGeography)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 점을 나타내는 경우 해당 값의 경도 좌표를 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 경도 좌표입니다.</returns>
      <param name="geographyValue">점을 나타낼 필요가 없는 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetMeasure(System.Data.Entity.Spatial.DbGeography)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 점을 나타내는 경우 해당 값의 M(측정값) 좌표를 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 M(측정값) 좌표계입니다.</returns>
      <param name="geographyValue">점을 나타낼 필요가 없는 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetMeasure(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 점을 나타내는 경우 해당 값의 M(측정값) 좌표를 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 M(측정값) 좌표계입니다.</returns>
      <param name="geometryValue">점을 나타낼 필요가 없는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetPointCount(System.Data.Entity.Spatial.DbGeography)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 선 문자열 또는 선형 링을 나타내는 경우 해당 값의 점 수를 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 점 수입니다.</returns>
      <param name="geographyValue">선 문자열 또는 선형 링을 나타낼 필요가 없는 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetPointCount(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 선 문자열 또는 선형 링을 나타내는 경우 해당 값의 점 수를 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 점 수입니다.</returns>
      <param name="geometryValue">선 문자열 또는 선형 링을 나타낼 필요가 없는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetPointOnSurface(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 DbGeography 값의 표면에서 점을 나타내는 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값을 반환합니다. 이 값이 표면을 나타내지 않는 경우 null일 수 있습니다.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값은 지정된 <paramref name="geometryValue" />의 표면에 있는 점을 나타냅니다.</returns>
      <param name="geometryValue">표면을 나타낼 필요가 없는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetSpatialTypeName(System.Data.Entity.Spatial.DbGeography)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 공간 형식 이름을 나타내는 값을 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 공간 형식 이름입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetSpatialTypeName(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 공간 형식 이름을 나타내는 값을 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 공간 형식 이름입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetStartPoint(System.Data.Entity.Spatial.DbGeography)">
      <summary>지정된 DbGeography 값의 시작점을 나타내는 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값을 반환합니다. 이 값이 곡선을 나타내지 않는 경우 null일 수 있습니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 시작점입니다.</returns>
      <param name="geographyValue">곡선을 나타낼 필요가 없는 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetStartPoint(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 DbGeometry 값의 시작점을 나타내는 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값을 반환합니다. 이 값이 곡선을 나타내지 않는 경우 null일 수 있습니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 시작점입니다.</returns>
      <param name="geometryValue">곡선을 나타낼 필요가 없는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetXCoordinate(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 점을 나타내는 경우 해당 값의 X 좌표를 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 X 좌표입니다.</returns>
      <param name="geometryValue">점을 나타낼 필요가 없는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetYCoordinate(System.Data.Entity.Spatial.DbGeometry)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 점을 나타내는 경우 해당 값의 Y 좌표를 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 Y 좌표입니다.</returns>
      <param name="geometryValue">점을 나타낼 필요가 없는 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.InteriorRingAt(System.Data.Entity.Spatial.DbGeometry,System.Int32)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 다각형을 나타내는 경우 해당 값에서 내부 링을 반환합니다.</summary>
      <returns>
        <paramref name="geometryValue" />가 다각형을 나타내면 <paramref name="index" /> 위치에 있는 geometryValue의 내부 링이고, 그렇지 않으면 null입니다.</returns>
      <param name="geometryValue">다각형을 나타낼 필요가 없는 기하 도형 값입니다.</param>
      <param name="index">요소를 가져와야 하는 기하 도형 값 내의 위치입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Intersection(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>두 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 교집합을 계산합니다.</summary>
      <returns>
        <paramref name="geographyValue" /> 및 <paramref name="otherGeography" />의 교집합을 나타내는 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값입니다.</returns>
      <param name="geographyValue">첫 번째 지리 값입니다.</param>
      <param name="otherGeography">두 번째 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Intersection(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>두 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 교집합을 계산합니다.</summary>
      <returns>
        <paramref name="geographyValue" /> 및 <paramref name="otherGeography" />의 교집합을 나타내는 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값입니다.</returns>
      <param name="geometryValue">첫 번째 기하 도형 값입니다.</param>
      <param name="otherGeometry">두 번째 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Intersects(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>주어진 두 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 공간적으로 교차하는지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="geographyValue" />가 <paramref name="otherGeography" />와 교차하면 true이고 그렇지 않으면 false입니다.</returns>
      <param name="geographyValue">교차하는지 비교할 첫 번째 지리 값입니다.</param>
      <param name="otherGeography">교차하는지 비교할 두 번째 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Intersects(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>주어진 두 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 공간적으로 교차하는지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="geometryValue" />가 <paramref name="otherGeometry" />와 교차하면 true이고 그렇지 않으면 false입니다.</returns>
      <param name="geometryValue">교차하는지 비교할 첫 번째 기하 도형 값입니다.</param>
      <param name="otherGeometry">교차하는지 비교할 두 번째 기하 도형 값입니다.</param>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlSpatialServices.NativeTypesAvailable">
      <summary>공급자에서 빠른 오류가 발생하지 않고 필요한 형식/리소스가 있음을 가정하고 EF가 계속되는지 여부를 나태내는 값을 가져옵니다.기본값은 true입니다.</summary>
      <returns>공급자에서 빠른 오류가 발생하지 않고 필요한 형식/리소스가 있음을 가정하고 EF가 계속되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Overlaps(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>주어진 두 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 공간적으로 겹치는지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="geometryValue" />가 <paramref name="otherGeometry" />와 겹치면 true이고 그렇지 않으면 false입니다.</returns>
      <param name="geometryValue">첫 번째 기하 도형 값입니다.</param>
      <param name="otherGeometry">두 번째 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.PointAt(System.Data.Entity.Spatial.DbGeography,System.Int32)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 선 문자열 또는 선형 링을 나타내는 경우 해당 값의 점 요소를 반환합니다.</summary>
      <returns>선 문자열 또는 선형 링을 나타내면 <paramref name="index" /> 위치에서 <paramref name="geographyValue" />의 점이고, 그렇지 않으면 null입니다.</returns>
      <param name="geographyValue">선 문자열 또는 선형 링을 나타낼 필요가 없는 지리 값입니다.</param>
      <param name="index">요소를 가져와야 하는 지리 값 내의 위치입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.PointAt(System.Data.Entity.Spatial.DbGeometry,System.Int32)">
      <summary>지정된 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 선 문자열 또는 선형 링을 나타내는 경우 해당 값의 점 요소를 반환합니다.</summary>
      <returns>선 문자열 또는 선형 링을 나타내면 <paramref name="index" /> 위치에서 <paramref name="geometryValue" />의 점이고, 그렇지 않으면 null입니다.</returns>
      <param name="geometryValue">선 문자열 또는 선형 링을 나타낼 필요가 없는 기하 도형 값입니다.</param>
      <param name="index">요소를 가져와야 하는 기하 도형 값 내의 위치입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Relate(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry,System.String)">
      <summary>지정된 두 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 주어진 DE-9IM(Dimensionally Extended Nine-Intersection Model) 교차 패턴에 따라 공간적으로 관련되어 있는지 여부를 확인합니다.</summary>
      <returns>이 <paramref name="geometryValue" /> 값이 지정된 교차 패턴 <paramref name="matrix" />에 따라 <paramref name="otherGeometry" />와 관련되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="geometryValue">첫 번째 기하 도형 값입니다.</param>
      <param name="otherGeometry">관계가 있는지 첫 번째 기하 도형 값과 비교해야 하는 기하 도형 값입니다.</param>
      <param name="matrix">관계를 정의하는 DE 9IM 교차 패턴의 텍스트 표현을 포함하는 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.SpatialEquals(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>주어진 두 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값이 공간적으로 같은지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="geographyValue" />가 <paramref name="otherGeography" />와 공간적으로 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="geographyValue">같은지 비교할 첫 번째 지리 값입니다.</param>
      <param name="otherGeography">같은지 비교할 두 번째 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.SpatialEquals(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>주어진 두 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 공간적으로 같은지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="geometryValue" />가 <paramref name="otherGeometry" />와 공간적으로 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="geometryValue">같은지 비교할 첫 번째 기하 도형 값입니다.</param>
      <param name="otherGeometry">같은지 비교할 두 번째 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.SymmetricDifference(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>두 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 대칭차를 계산합니다.</summary>
      <returns>
        <paramref name="geographyValue" />와 <paramref name="otherGeography" />의 대칭차를 나타내는 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값입니다.</returns>
      <param name="geographyValue">첫 번째 지리 값입니다.</param>
      <param name="otherGeography">두 번째 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.SymmetricDifference(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>두 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값 간의 대칭차를 계산합니다.</summary>
      <returns>
        <paramref name="geometryValue" />와 <paramref name="otherGeometry" /> 간의 대칭차를 나타내는 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값입니다.</returns>
      <param name="geometryValue">첫 번째 기하 도형 값입니다.</param>
      <param name="otherGeometry">두 번째 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Touches(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>주어진 두 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 공간적으로 접하는지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="geometryValue" />가 <paramref name="otherGeometry" />와 접하면 true이고 그렇지 않으면 false입니다.</returns>
      <param name="geometryValue">첫 번째 기하 도형 값입니다.</param>
      <param name="otherGeometry">두 번째 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Union(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>두 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값의 합집합을 계산합니다.</summary>
      <returns>
        <paramref name="geographyValue" /> 및 <paramref name="otherGeography" />의 합집합을 나타내는 새 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 값입니다.</returns>
      <param name="geographyValue">첫 번째 지리 값입니다.</param>
      <param name="otherGeography">두 번째 지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Union(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>두 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값의 합집합을 계산합니다.</summary>
      <returns>
        <paramref name="geometryValue" /> 및 <paramref name="otherGeometry" />의 합집합을 나타내는 새 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값입니다.</returns>
      <param name="geometryValue">첫 번째 기하 도형 값입니다.</param>
      <param name="otherGeometry">두 번째 기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Within(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>하나의 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 값이 공간적으로 다른 값 안에 있는지 여부를 확인합니다.</summary>
      <returns>geometryValue가 otherGeometry 안에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="geometryValue">첫 번째 기하 도형 값입니다.</param>
      <param name="otherGeometry">두 번째 기하 도형 값입니다.</param>
    </member>
    <member name="T:System.Data.Entity.SqlServer.Utilities.TaskExtensions">
      <summary>
        <see cref="T:System.Threading.Tasks.Task" /> 클래스에 대한 확장 메서드가 포함되어 있습니다.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.WithCurrentCulture(System.Threading.Tasks.Task)">
      <summary>연속을 원래 컨텍스트로 다시 마샬링하지 않도록 하되 현재 문화권 및 UI 문화권은 유지하기 위해 이 <see cref="T:System.Threading.Tasks.Task" />를 대기하는 데 사용되는 대기자를 구성합니다.</summary>
      <returns>이 작업을 대기하는 데 사용되는 개체입니다.</returns>
      <param name="task">대기할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.WithCurrentCulture``1(System.Threading.Tasks.Task{``0})">
      <summary>연속을 원래 컨텍스트로 다시 마샬링하지 않도록 하되 현재 문화권 및 UI 문화권은 유지하기 위해 이 <see cref="T:System.Threading.Tasks.Task`1" />를 대기하는 데 사용되는 대기자를 구성합니다.</summary>
      <returns>이 작업을 대기하는 데 사용되는 개체입니다.</returns>
      <param name="task">대기할 작업입니다.</param>
      <typeparam name="T">연결된 <see cref="T:System.Threading.Tasks.Task`1" />에서 생성하는 결과의 형식입니다.</typeparam>
    </member>
    <member name="T:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter">
      <summary>
        <see cref="T:System.Threading.Tasks.Task" />에서 문화권을 유지하는 대기를 허용하는 대기 가능 개체를 제공합니다.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter.#ctor(System.Threading.Tasks.Task)">
      <summary>
        <see cref="T:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter" /> 클래스의 새 인스턴스를 생성합니다.</summary>
      <param name="task">대기할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter.GetAwaiter">
      <summary>이 <see cref="T:System.Threading.Tasks.Task" />을 기다리는 데 사용되는 대기자를 가져옵니다.</summary>
      <returns>대기자 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter.GetResult">
      <summary>완료된 <see cref="T:System.Threading.Tasks.Task" />에서 대기를 종료합니다.</summary>
      <exception cref="T:System.NullReferenceException">대기자가 올바르게 초기화되지 않았습니다.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">작업이 취소되었습니다.</exception>
      <exception cref="T:System.Exception">오류 상태로 완료된 작업입니다.</exception>
    </member>
    <member name="P:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter.IsCompleted">
      <summary>이 <see cref="T:System.Threading.Tasks.Task" />가 완료되었는지 여부를 나타내는 값을 가져옵니다.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter.OnCompleted(System.Action)">
      <summary>이 메서드는 구현되지 않았으므로 호출해서는 안 됩니다.</summary>
      <param name="continuation">대기 작업이 완료되면 호출할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter.UnsafeOnCompleted(System.Action)">
      <summary>이 <see cref="T:System.Runtime.CompilerServices.TaskAwaiter" />과 연결된 <see cref="T:System.Threading.Tasks.Task" />로 연속을 예약합니다.</summary>
      <param name="continuation">대기 작업이 완료되면 호출할 작업입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="continuation" /> 인수가 null(Visual Basic의 경우 Nothing)입니다.</exception>
      <exception cref="T:System.InvalidOperationException">대기자가 올바르게 초기화되지 않았습니다.</exception>
    </member>
    <member name="T:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1">
      <summary>
        <see cref="T:System.Threading.Tasks.Task`1" />에서 문화권을 유지하는 대기를 허용하는 대기 가능 개체를 제공합니다.</summary>
      <typeparam name="T">연결된 <see cref="T:System.Threading.Tasks.Task`1" />에서 생성하는 결과의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1.#ctor(System.Threading.Tasks.Task{`0})">
      <summary>
        <see cref="T:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1" /> 클래스의 새 인스턴스를 생성합니다.</summary>
      <param name="task">대기할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1.GetAwaiter">
      <summary>이 <see cref="T:System.Threading.Tasks.Task`1" />을 기다리는 데 사용되는 대기자를 가져옵니다.</summary>
      <returns>대기자 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1.GetResult">
      <summary>완료된 <see cref="T:System.Threading.Tasks.Task`1" />에서 대기를 종료합니다.</summary>
      <returns>완료된 <see cref="T:System.Threading.Tasks.Task`1" />의 결과입니다.</returns>
      <exception cref="T:System.NullReferenceException">대기자가 올바르게 초기화되지 않았습니다.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">작업이 취소되었습니다.</exception>
      <exception cref="T:System.Exception">오류 상태로 완료된 작업입니다.</exception>
    </member>
    <member name="P:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1.IsCompleted">
      <summary>이 <see cref="T:System.Threading.Tasks.Task" />가 완료되었는지 여부를 나타내는 값을 가져옵니다.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1.OnCompleted(System.Action)">
      <summary>이 메서드는 구현되지 않았으므로 호출해서는 안 됩니다.</summary>
      <param name="continuation">대기 작업이 완료되면 호출할 작업입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1.UnsafeOnCompleted(System.Action)">
      <summary>이 <see cref="T:System.Runtime.CompilerServices.TaskAwaiter`1" />과 연결된 <see cref="T:System.Threading.Tasks.Task`1" />로 연속을 예약합니다.</summary>
      <param name="continuation">대기 작업이 완료되면 호출할 작업입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="continuation" /> 인수가 null(Visual Basic의 경우 Nothing)입니다.</exception>
      <exception cref="T:System.InvalidOperationException">대기자가 올바르게 초기화되지 않았습니다.</exception>
    </member>
  </members>
</doc>